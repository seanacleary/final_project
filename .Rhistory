install.packages("ggChernoff")
library(ggChernoff)
face <- chernoffGrob(.5, .5, size = 1e3, smile = -1, brow = -1, colour = 'navy', fill = 'yellow')
grid::grid.newpage()
grid::grid.draw(face)
library(ggChernoff)
face <- chernoffGrob(.5, .5, size = 1e3, smile = -1, brow = -1, colour = 'navy', fill = 'yellow')
grid::grid.newpage()
grid::grid.draw(face)
library(ggChernoff)
face <- chernoffGrob(.5, .5, size = 1e3, smile = -1, brow = -1, colour = 'navy', fill = 'yellow')
grid::grid.newpage()
grid::grid.draw(face)
library(ggChernoff)
face <- chernoffGrob(.5, .5, size = 1e3, smile = -1, brow = -1, colour = 'navy', fill = 'yellow')
grid::grid.newpage()
grid::grid.draw(face)
library(ggChernoff)
face <- chernoffGrob(.5, .5, size = 1e3, smile = -1, brow = -1, colour = 'navy', fill = 'yellow')
grid::grid.newpage()
grid::grid.draw(face)
install.packages("C:/Users/sj_cl/Downloads/GISTools_0.7-4.tar.gz", repos = NULL, type = "source")
install.packages(c("sf", "sp", "GISTools"))
#Call libraries
library(sf)
library(sp)
library(GISTools)
install.packages("sf")
#Call libraries
library(sf)
install.packages("sf")
install.packages("sf")
#Call libraries
library(sf)
library(sp)
library(GISTools)
install.packages("GISTools")
install.packages("C:/Users/sj_cl/Downloads/GISTools_0.7-4.tar.gz", repos = NULL, type = "source")
install.packages("maptools")
install.packages("rgeos")
)
install.packages("C:/Users/sj_cl/Downloads/GISTools_0.7-4.tar.gz", repos = NULL, type = "source")
library(GISTools)
install.packages("RColorBrewer", "MASS", "rgeos")
install.packages("RColorBrewer", "MASS", "rgeos")
install.packages("RColorBrewer", "MASS")
install.packages("RColorBrewer")
install.packages("MASS")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_knit$set(root.dir = '/Users/xpf100/Downloads/Raster/NEON-DS-Airborne-Remote-Sensing')
# load libraries
library(raster) #pixels
library(rgdal)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_knit$set(root.dir = '/Users/xpf100/Downloads/Raster/NEON-DS-Airborne-Remote-Sensing/HARV')
knitr::opts_knit$set(root.dir = '/Users/sj_cl/Documents/Rollins/Spring 2023/INFO 532/NEONDSAirborneRemoteSensing/HARV')
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_knit$set(root.dir = '/Users/sj_cl/Documents/Rollins/Spring 2023/INFO 532/NEONDSAirborneRemoteSensing/HARV')
# load libraries
library(raster) #pixels
library(rgdal)
# Load raster into R
DSM_HARV <- raster("HARV/DSM/HARV_dsmCrop.tif")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_knit$set(root.dir = '/Users/sj_cl/Documents/Rollins/Spring 2023/INFO 532/NEONDSAirborneRemoteSensing')
# Load raster into R
DSM_HARV <- raster("HARV/DSM/HARV_dsmCrop.tif")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_knit$set(root.dir = '/Users/sj_cl/Documents/Rollins/Spring 2023/INFO 532/NEONDSAirborneRemoteSensing/HARV')
# Load raster into R
DSM_HARV <- raster("HARV/DSM/HARV_dsmCrop.tif")
us <- states()
knitr::opts_chunk$set(echo =TRUE)
install.packages("remotes")
install.packages("remotes")
# remotes::install_github("mtennekes/oldtmaptools
install.packages("remotes")
install.packages("remotes")
knitr::opts_chunk$set(echo =TRUE)
#install.packages("remotes")
remotes::install_github("mtennekes/oldtmaptools")
knitr::opts_chunk$set(echo = TRUE)
#INSTALL THESE PACKAGES FIRST, BUT RUN ONLY ONCE.
# install.packages(c("sf", "sp", "GISTools", "tmap", "dplyr", "tidyverse"), repos = "http://cran.us.r-project.org")
library("pload")
#INSTALL THESE PACKAGES FIRST, BUT RUN ONLY ONCE.
# install.packages(c("sf", "sp", "GISTools", "tmap", "dplyr", "tidyverse"), repos = "http://cran.us.r-project.org")
library("pacman")
p_load(sf,sp,GISTools,tmap,dplyr,tidyverse,repos="http://cran.us.r-project.org")
p_load(sf,sp,GISTools,tmap,dplyr,tidyverse,repos="http://cran.us.r-project.org")
install.packages(c("deldir"), repos = "http://cran.us.r-project.org")
install.packages(c("deldir"), repos = "http://cran.us.r-project.org")
install.packages(c("gstat"), repos = "http://cran.us.r-project.org", dependencies = F)
# Call libraries
library(sf)
library(sp)
library(GISTools)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidygeocoder)
library(tmap)
library(deldir)
library(gstat)
p_load(sf,sp,GISTools,tmap,dplyr,tidyverse,gstat,repos="http://cran.us.r-project.org")
library(gstat)
p_load(sf,sp,GISTools,tmap,dplyr,tidyverse,gstat,zoo,repos="http://cran.us.r-project.org")
library(gstat)
#Run your function
polygon <- function(layer){
crds <- layer@coords
z <- deldir(crds[,1], crds[,2])
w <- tile.list(z)
polys <- vector(mode = "list", length = length(w))
for(i in seq(along = polys)){
pcrds <- cbind(w[[i]]$x, w[[i]]$y)
pcrds <- rbind(pcrds, pcrds[1,])
polys[[i]] <- Polygons(list(Polygon(pcrds)),
ID = as.character(i))
}
SP <- SpatialPolygons(polys)
voroni <- SpatialPolygonsDataFrame(SP,
data = data.frame(x = crds[,1],
y = crds[,2],
layer@data,
row.names = sapply(slot(SP, "polygons"),
function(x) slot(x, "ID"))))
proj4string(voroni) <- CRS(proj4string(layer))
return(voroni)
}
data(fulmar)
dim(fulmar)
head(fulmar)
#Transform into spatial (sp) object
fulmar.spdf <- SpatialPointsDataFrame(cbind(fulmar$x, fulmar$y), fulmar)
#Subset data to only year = 1999
fulmar.spdf <- fulmar.spdf[fulmar.spdf$year == 1999,]
#Set projection using proj4string()
proj4string(fulmar.spdf) <- CRS("+init=epsg:32631")
#
fulmar.voro <- polygon(fulmar.spdf)
tmap_mode("plot")
plot1 <- tm_shape(fulmar.spdf) +
tm_dots(size = 0.05, col = "red") +
tm_shape(fulmar.voro) +
tm_borders(col = "lightgrey")
plot2 <- tm_shape(fulmar.spdf) +
tm_dots(size = 0.05, col = "red") +
tm_shape(fulmar.voro) +
tm_borders(col = "lightgrey") +
tm_polygons("fulmar", title = "Fulmar Density")
tmap_arrange(plot1, plot2)
?fulmar
tmap_mode("view") #interactive mode
tm_shape(fulmar.voro) +
tm_fill("fulmar", style = "fixed",  breaks = c(0,5,15,25,35), palette="Blues", alpha = 0.5, title = "Fulmar Density") +
tm_shape(fulmar.spdf) +
tm_dots(col = "red", size = 0.005)
tm_shape(fulmar.voro) +
tm_fill("fulmar", style = "fixed",  breaks = c(0,5,15,25,35), palette="Reds", alpha = 0.5, title = "Fulmar Density") +
tm_shape(fulmar.spdf) +
tm_dots(col = "red", size = 0.005)
pacman::p_load(dplyr,sf,stringr)
asthma <- read.csv("PLACES__Local_Data_for_Better_Health__County_Data_2023_release (1).csv")
pacman::p_load(dplyr,sf,stringr)
asthma <- read.csv("PLACES__Local_Data_for_Better_Health__County_Data_2023_release (1).csv")
covariates <- read.csv('R13519399_SL050.csv', colClasses = 'character')
pacman::p_load(dplyr,sf,stringr)
asthma <- read.csv("PLACES__Local_Data_for_Better_Health__County_Data_2023_release (1).csv")
covariates <- read.csv('R13519399_SL050.csv', colClasses = 'character')
covariates2 <- read.csv('R13519399_SL050a.csv', colClasses = 'character')
asthma <- read_csv("PLACES__Census_Tract_Data__GIS_Friendly_Format___2022_release.csv")
pacman::p_load(dplyr,sf,stringr)
asthma <- read.csv("PLACES__Local_Data_for_Better_Health__County_Data_2023_release (1).csv")
covariates <- read.csv('R13519399_SL050.csv', colClasses = 'character')
covariates2 <- read.csv('R13519399_SL050a.csv', colClasses = 'character')
asthma <- read_csv("PLACES__Census_Tract_Data__GIS_Friendly_Format___2022_release.csv")
pacman::p_load(dplyr,sf,sp,stringr,tidycensus,tigris, foreign,tmap, DCluster, spdep, smerc,
GWmodel)
#Import CDC Places 2022 Dataset#
asthma <- read.dbf('asthma.dbf')
pacman::p_load(dplyr,sf,sp,stringr,tidycensus,tigris, foreign,tmap, DCluster, spdep, smerc,
GWmodel)
#Import CDC Places 2022 Dataset#
asthma <- read.dbf('asthma.dbf')
knitr::opts_chunk$set(warning=FALSE, message=FALSE, results='hide',fig.keep='all')
#load libraries
pacman::p_load(tidyverse,
tidycensus,
sf,
tmap,
tigris,
spdep,
SpatialEpi)
#import data from txt file and change missing and suppressed to n/a
death <- read.table('vp2data2.txt',
sep ='\t',
header = T,
na.strings = c('Missing', 'Suppressed'),
stringsAsFactors = F)
#import data
ent <- read.csv("ent data 550.csv")
setwd("C:/Users/sj_cl/Documents/Rollins/Spring 2024/DATA 550/finalproject")
#import data
ent <- read.csv("ent data 550.csv")
View(ent)
ent <- ent %>%
filter(!is.na(ent2_study_type)) %>%
mutate(sumrow = rowSums(pick(ent2_agpt_fem_fed:ent2_clx_male), na.rm = T)) %>%
mutate(aedes = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_fem_unfed), na.rm = T))
#packages
pacman::p_load(dplyr)
#import data
ent <- read.csv("ent data 550.csv")
ent <- ent %>%
filter(!is.na(ent2_study_type)) %>%
mutate(sumrow = rowSums(pick(ent2_agpt_fem_fed:ent2_clx_male), na.rm = T)) %>%
mutate(aedes = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_fem_unfed), na.rm = T))
View(ent)
ent <- ent %>%
filter(!is.na(ent2_study_type)) %>%
mutate(sumrow = rowSums(pick(ent2_agpt_fem_fed:ent2_clx_male), na.rm = T)) %>%
mutate(aedes = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_fem_unfed), na.rm = T)) %>%
select(-c(redcap_repeat_instrument, redcap_repeat_instance, ent2_exl, ent2_study_type,
ent2_coll_meth, ent2_coll_meth_othr, ent2_obs, ent2_identification_and_counting_of_mosquitos_complete))
View(ent)
#import data
ent <- read.csv("ent data 550.csv")
ent <- ent %>%
filter(!is.na(ent2_study_type)) %>%
#  mutate(sumrow = rowSums(pick(ent2_agpt_fem_fed:ent2_clx_male), na.rm = T)) %>%
#  mutate(aedes = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_fem_unfed), na.rm = T)) %>%
select(-c(redcap_repeat_instrument, redcap_repeat_instance, ent2_exl, ent2_study_type,
ent2_coll_meth, ent2_coll_meth_othr, ent2_obs, ent2_identification_and_counting_of_mosquitos_complete))
View(ent)
#import data
ent <- read.csv("ent data 550.csv")
ent <- ent %>%
filter(!is.na(ent2_study_type)) %>%
#  mutate(sumrow = rowSums(pick(ent2_agpt_fem_fed:ent2_clx_male), na.rm = T)) %>%
#  mutate(aedes = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_fem_unfed), na.rm = T)) %>%
mutate(cluster=substr(record_id,1,2)) %>%
mutate(group=case_when((cluster == 11 |
cluster == 15 |
cluster == 16 |
cluster == 17 |
cluster == 18 |
cluster == 21 |
cluster == 22 |
cluster == 24 |
cluster == 25 |
cluster == 26 |
cluster == 28 |
cluster == 36 |
cluster == 37 |
cluster == 38 |
cluster == 41 |
cluster == 42 |
cluster == 43 |
cluster == 46 |
cluster == 48 |
cluster == 53 |
cluster == 54 |
cluster == 58 |
cluster == 59 |
cluster == 60 |
cluster == 64) ~ "control",
TRUE ~ "treatment")) %>%
select(-c(redcap_repeat_instrument, redcap_repeat_instance, ent2_exl, ent2_study_type,
ent2_coll_meth, ent2_coll_meth_othr, ent2_obs, ent2_identification_and_counting_of_mosquitos_complete))
View(ent)
ent <- reshape(ent,
direction = "wide",
idvar = "record_id",
timevar = "redcap_event_name")
View(ent)
#import data
ent <- read.csv("ent data 550.csv")
ent <- ent %>%
filter(!is.na(ent2_study_type)) %>%
#  mutate(sumrow = rowSums(pick(ent2_agpt_fem_fed:ent2_clx_male), na.rm = T)) %>%
#  mutate(aedes = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_fem_unfed), na.rm = T)) %>%
select(-c(redcap_repeat_instrument, redcap_repeat_instance, ent2_exl, ent2_study_type,
ent2_coll_meth, ent2_coll_meth_othr, ent2_obs, ent2_identification_and_counting_of_mosquitos_complete)) %>%
mutate(cluster=substr(record_id,1,2)) %>%
mutate(group=case_when((cluster == 11 |
cluster == 15 |
cluster == 16 |
cluster == 17 |
cluster == 18 |
cluster == 21 |
cluster == 22 |
cluster == 24 |
cluster == 25 |
cluster == 26 |
cluster == 28 |
cluster == 36 |
cluster == 37 |
cluster == 38 |
cluster == 41 |
cluster == 42 |
cluster == 43 |
cluster == 46 |
cluster == 48 |
cluster == 53 |
cluster == 54 |
cluster == 58 |
cluster == 59 |
cluster == 60 |
cluster == 64) ~ "control",
TRUE ~ "treatment"))
ent <- reshape(ent,
direction = "wide",
idvar = "record_id",
timevar = "redcap_event_name")
#import data
ent <- read.csv("ent data 550.csv")
ent <- ent %>%
filter(!is.na(ent2_study_type)) %>%
#  mutate(sumrow = rowSums(pick(ent2_agpt_fem_fed:ent2_clx_male), na.rm = T)) %>%
#  mutate(aedes = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_fem_unfed), na.rm = T)) %>%
select(-c(redcap_repeat_instrument, redcap_repeat_instance, ent2_exl, ent2_study_type,
ent2_coll_meth, ent2_coll_meth_othr, ent2_obs, ent2_identification_and_counting_of_mosquitos_complete))
ent <- reshape(ent,
direction = "wide",
idvar = "record_id",
timevar = "redcap_event_name")
ent <- ent %>%
mutate(cluster=substr(record_id,1,2)) %>%
mutate(group=case_when((cluster == 11 |
cluster == 15 |
cluster == 16 |
cluster == 17 |
cluster == 18 |
cluster == 21 |
cluster == 22 |
cluster == 24 |
cluster == 25 |
cluster == 26 |
cluster == 28 |
cluster == 36 |
cluster == 37 |
cluster == 38 |
cluster == 41 |
cluster == 42 |
cluster == 43 |
cluster == 46 |
cluster == 48 |
cluster == 53 |
cluster == 54 |
cluster == 58 |
cluster == 59 |
cluster == 60 |
cluster == 64) ~ "control",
TRUE ~ "treatment"))
View(ent)
#export file
write.csv(ent, "simulation_source.csv")
#simulation now
n <- 2366 # sample size
set.seed(7) # set seed for reproducibility
#import data
ent <- read.csv("ent data 550.csv")
ent <- ent %>%
filter(!is.na(ent2_study_type)) %>%
mutate(total_mosq = rowSums(pick(ent2_agpt_fem_fed:ent2_clx_male), na.rm = T)) %>%
mutate(total_aedes = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_male), na.rm = T)) %>%
mutate(aedes_female = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_fem_unfed), na.rm = T)) %>%
select(record_id,redcap_event_name,total_mosq, total_aedes, aedes_female)
View(ent)
ent <- reshape(ent,
direction = "wide",
idvar = "record_id",
timevar = "redcap_event_name")
ent <- ent %>%
mutate(cluster=substr(record_id,1,2)) %>%
mutate(group=case_when((cluster == 11 |
cluster == 15 |
cluster == 16 |
cluster == 17 |
cluster == 18 |
cluster == 21 |
cluster == 22 |
cluster == 24 |
cluster == 25 |
cluster == 26 |
cluster == 28 |
cluster == 36 |
cluster == 37 |
cluster == 38 |
cluster == 41 |
cluster == 42 |
cluster == 43 |
cluster == 46 |
cluster == 48 |
cluster == 53 |
cluster == 54 |
cluster == 58 |
cluster == 59 |
cluster == 60 |
cluster == 64) ~ "control",
TRUE ~ "treatment"))
#export file
write.csv(ent, "simulation_source.csv")
View(ent)
#simulation now
data <- read.csv("simulation_source.csv")
View(data)
#import data
ent <- read.csv("ent data 550.csv")
ent <- ent %>%
filter(!is.na(ent2_study_type)) %>%
mutate(total_mosq = rowSums(pick(ent2_agpt_fem_fed:ent2_clx_male), na.rm = T)) %>%
mutate(total_aedes = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_male), na.rm = T)) %>%
mutate(aedes_female = rowSums(pick(ent2_agpt_fem_fed,ent2_agpt_fem_unfed), na.rm = T)) %>%
select(record_id,redcap_event_name,total_mosq, total_aedes, aedes_female)
ent <- reshape(ent,
direction = "wide",
idvar = "record_id",
timevar = "redcap_event_name")
ent <- ent %>%
mutate(cluster=substr(record_id,1,2)) %>%
mutate(group=case_when((cluster == 11 |
cluster == 15 |
cluster == 16 |
cluster == 17 |
cluster == 18 |
cluster == 21 |
cluster == 22 |
cluster == 24 |
cluster == 25 |
cluster == 26 |
cluster == 28 |
cluster == 36 |
cluster == 37 |
cluster == 38 |
cluster == 41 |
cluster == 42 |
cluster == 43 |
cluster == 46 |
cluster == 48 |
cluster == 53 |
cluster == 54 |
cluster == 58 |
cluster == 59 |
cluster == 60 |
cluster == 64) ~ "control",
TRUE ~ "treatment"))
#export file
write.csv(ent, "simulation_source.csv")
#simulation now
data <- read.csv("simulation_source.csv")
head(data)
summary(data)
#histogram of each var
hist(data$total_mosq.year_1_bl_arm_3, freq=F, main="Histogram of BL total mosquitoes", xlab="Number of total mosquitoes")
#histogram of each var
hist(data$total_mosq.year_1_bl_arm_3, freq=F, main="Histogram of BL total mosquitoes", xlab="Number of total mosquitoes")
#histogram of each var
hist(data$total_mosq.year_1_bl_arm_3, freq=F, main="Histogram of BL total mosquitoes", xlab="Number of total mosquitoes", bins=20)
#histogram of each var
hist(data$total_mosq.year_1_bl_arm_3, freq=F, main="Histogram of BL total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
#histogram of each var
hist(data$total_mosq.year_1_bl_arm_3, freq=F, main="Histogram of BL total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
hist(data$total_mosq.year_1_pt_6_arm_3, freq=F, main="Histogram of Y1 end total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
hist(data$total_mosq.year_2_pt_6_arm_3, freq=F, main="Histogram of Y2 end total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
hist(data$total_aedes.year_1_bl_arm_3, freq=F, main="Histogram of BL total Aedes", xlab="Number of Aedes", breaks=20)
hist(data$total_aedes.year_1_pt_6_arm_3, freq=F, main="Histogram of Y1 end total Aedes", xlab="Number of Aedes", breaks=20)
hist(data$total_aedes.year_2_pt_6_arm_3, freq=F, main="Histogram of Y2 end total Aedes", xlab="Number of Aedes", breaks=20)
hist(data$aedes_female.year_1_bl_arm_3, freq=F, main="Histogram of BL Aedes females", xlab="Number of Aedes females", breaks=20)
hist(data$aedes_female.year_1_pt_6_arm_3, freq=F, main="Histogram of Y1 end Aedes females", xlab="Number of Aedes females", breaks=20)
hist(data$aedes_female.year_2_pt_6_arm_3, freq=F, main="Histogram of Y2 end Aedes females", xlab="Number of Aedes females", breaks=20)
hist(data$group, freq=F, main="Histogram of Group")
barplot(table(data$group), main="Barplot of Treatment Group")
#load packages
pacman::p_load(skimr,janitor)
skimr(data)
skim(data)
#seed and sample size
n <- 2500
set.seed(seed=123)
#total mosq bl
hist(data$total_mosq.year_1_bl_arm_3, freq=F, main="Histogram of BL total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
total_mosq_bl.sim <-
hist(data$total_mosq.year_1_pt_6_arm_3, freq=F, main="Histogram of Y1 end total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
hist(data$total_mosq.year_2_pt_6_arm_3, freq=F, main="Histogram of Y2 end total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
hist(data$total_aedes.year_1_bl_arm_3, freq=F, main="Histogram of BL total Aedes", xlab="Number of Aedes", breaks=20)
hist(data$total_aedes.year_1_pt_6_arm_3, freq=F, main="Histogram of Y1 end total Aedes", xlab="Number of Aedes", breaks=20)
hist(data$total_aedes.year_2_pt_6_arm_3, freq=F, main="Histogram of Y2 end total Aedes", xlab="Number of Aedes", breaks=20)
hist(data$aedes_female.year_1_bl_arm_3, freq=F, main="Histogram of BL Aedes females", xlab="Number of Aedes females", breaks=20)
total_mosq_bl.sim <-
hist(data$total_mosq.year_1_pt_6_arm_3, freq=F, main="Histogram of Y1 end total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
hist(data$total_mosq.year_2_pt_6_arm_3, freq=F, main="Histogram of Y2 end total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
hist(data$total_aedes.year_1_bl_arm_3, freq=F, main="Histogram of BL total Aedes", xlab="Number of Aedes", breaks=20)
hist(data$total_aedes.year_1_pt_6_arm_3, freq=F, main="Histogram of Y1 end total Aedes", xlab="Number of Aedes", breaks=20)
summary(data)
total_mosq_bl.sim <- rpois(n=n, lambda=1/3.621)
hist(total_mosq_bl.sim)
#total mosq bl
hist(data$total_mosq.year_1_bl_arm_3, freq=F, main="Histogram of BL total mosquitoes", xlab="Number of total mosquitoes", breaks=20)
total_mosq_bl.sim <- rpois(n=n, lambda=1/3.621)
hist(total_mosq_bl.sim)
total_mosq_bl.sim <- rpois(n=n, lambda=3.621)
hist(total_mosq_bl.sim)
#total mosq bl
hist(data$total_mosq.year_1_bl_arm_3)
total_mosq_bl.sim <- rpois(n=n, lambda=3.621)
hist(total_mosq_bl.sim)
#total mosq bl
hist(data$total_mosq.year_1_bl_arm_3)
total_mosq_bl.sim <- rpois(n=n, lambda=3.621, lower=0, upper=114)
hist(total_mosq_bl.sim)
